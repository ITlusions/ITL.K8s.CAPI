name: Package and Release Chart

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Chart version to release'
        required: true
        type: string

env:
  HELM_VERSION: "3.15.4"

jobs:
  package-and-release:
    name: Package and Release Chart
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: ${{ env.HELM_VERSION }}

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Get chart version
        id: chart_version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Chart version: $VERSION"

      - name: Update chart version
        run: |
          VERSION="${{ steps.chart_version.outputs.version }}"
          sed -i "s/^version:.*/version: \"$VERSION\"/" Chart.yaml
          
          # Also update appVersion if it exists
          if grep -q "^appVersion:" Chart.yaml; then
            sed -i "s/^appVersion:.*/appVersion: \"$VERSION\"/" Chart.yaml
          fi
          
          echo "Updated Chart.yaml:"
          cat Chart.yaml

      - name: Package Helm chart
        run: |
          echo "üì¶ Packaging Helm chart..."
          helm package . --destination ./charts/
          
          echo "üì¶ Chart packaged:"
          ls -la charts/

      - name: Generate chart index
        run: |
          echo "üìã Generating Helm repository index..."
          helm repo index charts/ --url https://github.com/${{ github.repository }}/releases/download/v${{ steps.chart_version.outputs.version }}/
          
          echo "üìã Generated index.yaml:"
          cat charts/index.yaml

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.chart_version.outputs.version }}
          name: Release v${{ steps.chart_version.outputs.version }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            charts/*.tgz
            charts/index.yaml
          body: |
            # ITL.K8s.Capi Helm Chart v${{ steps.chart_version.outputs.version }}
            
            ## üöÄ What's New
            
            This release includes the ITL.K8s.Capi Helm chart for deploying vcluster using Cluster API.
            
            ## üìã Chart Information
            - **Chart Version**: ${{ steps.chart_version.outputs.version }}
            - **Kubernetes Compatibility**: v1.30.x, v1.31.x
            - **CAPI Version**: v1.8.5
            - **vcluster Provider**: v0.2.2
            - **vcluster Chart**: 0.22.1
            
            ## üì¶ Installation
            
            ### Add Helm Repository
            ```bash
            helm repo add itl-k8s-capi https://github.com/${{ github.repository }}/releases/download/v${{ steps.chart_version.outputs.version }}/
            helm repo update
            ```
            
            ### Install Chart
            ```bash
            # Development environment
            helm install k8s-tst-dev itl-k8s-capi/itl-k8s-capi \
              -f https://raw.githubusercontent.com/${{ github.repository }}/main/values-development.yaml \
              --namespace vcluster-dev \
              --create-namespace
            
            # Production environment
            helm install k8s-tst-prod itl-k8s-capi/itl-k8s-capi \
              -f https://raw.githubusercontent.com/${{ github.repository }}/main/values-production.yaml \
              --namespace vcluster-prod \
              --create-namespace
            ```
            
            ## üìö Documentation
            
            - [Quick Start Guide](https://github.com/${{ github.repository }}/blob/main/docs/quick-start.md)
            - [User Guide](https://github.com/${{ github.repository }}/blob/main/docs/user-guide.md)
            - [Configuration Reference](https://github.com/${{ github.repository }}/blob/main/docs/configuration.md)
            - [Developer Guide](https://github.com/${{ github.repository }}/blob/main/docs/developer-guide.md)
            
            ## üîç Verification
            
            All charts are tested with:
            - ‚úÖ Helm lint validation
            - ‚úÖ Kubernetes manifest validation  
            - ‚úÖ KIND cluster testing
            - ‚úÖ Security scanning
            - ‚úÖ Documentation completeness
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push chart to OCI registry
        run: |
          echo "üöÄ Pushing chart to OCI registry..."
          
          CHART_FILE=$(ls charts/*.tgz)
          CHART_NAME=$(basename $CHART_FILE .tgz)
          
          helm push $CHART_FILE oci://ghcr.io/${{ github.repository_owner }}/helm-charts
          
          echo "‚úÖ Chart pushed to oci://ghcr.io/${{ github.repository_owner }}/helm-charts"

  update-documentation:
    name: Update Documentation
    runs-on: ubuntu-latest
    needs: package-and-release
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update installation instructions
        run: |
          VERSION="${{ github.ref_name }}"
          VERSION=${VERSION#v}  # Remove 'v' prefix if present
          
          echo "üìù Updating installation instructions with version $VERSION..."
          
          # Update README.md
          sed -i "s|helm repo add itl-k8s-capi.*|helm repo add itl-k8s-capi https://github.com/${{ github.repository }}/releases/download/v$VERSION/|g" README.md
          
          # Update quick-start.md
          sed -i "s|helm repo add itl-k8s-capi.*|helm repo add itl-k8s-capi https://github.com/${{ github.repository }}/releases/download/v$VERSION/|g" docs/quick-start.md
          
          echo "‚úÖ Documentation updated"

      - name: Commit and push changes
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          
          if git diff --quiet; then
            echo "No changes to commit"
          else
            git add README.md docs/quick-start.md
            git commit -m "docs: update installation instructions for release ${{ github.ref_name }}"
            git push
            echo "‚úÖ Documentation changes committed and pushed"
          fi
